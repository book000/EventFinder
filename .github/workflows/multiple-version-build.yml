name: Multiple Version Build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python 3
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

  get-versions:
    runs-on: ubuntu-latest
    needs: [setup]

    outputs:
      versions: ${{ steps.versions.outputs.value }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get versions
        id: versions
        run: |
          VERSIONS=`python tools/getVersions.py`
          echo $VERSIONS
          echo "value=${VERSIONS}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: [setup, get-versions]

    strategy:
      fail-fast: false
      matrix:
        versions: ${{ fromJson(needs.get-versions.outputs.versions) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Manage matrix
        id: manage-matrix
        run: |
          echo "groupId=${{ fromJson(matrix.versions).groupId }}" >> $GITHUB_OUTPUT
          echo "javadoc_version=${{ fromJson(matrix.versions).javadoc_version }}" >> $GITHUB_OUTPUT
          echo "version=${{ fromJson(matrix.versions).version }}" >> $GITHUB_OUTPUT
          echo "java_version=${{ fromJson(matrix.versions).java_version }}" >> $GITHUB_OUTPUT

      - name: Set up JDK ${{ steps.manage-matrix.outputs.java_version }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ steps.manage-matrix.outputs.java_version }}
          distribution: adopt

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache event files
        uses: actions/cache@v3
        id: cache-event-files
        with:
          path: src/main/java/com/tomacheese/eventfinder/listeners
          key: ${{ runner.os }}-eventfiles-${{ steps.manage-matrix.outputs.version }}

      - name: Install dependencies
        run: |
          pip install requests
          pip install beautifulsoup4

      - name: Create event files
        if: steps.cache-event-files.outputs.cache-hit != 'true'
        run: python tools/getEvents.py ${{ steps.manage-matrix.outputs.javadoc_version }}

      - name: Build with Maven
        run: mvn package -Djava.version=${{ steps.manage-matrix.outputs.java_version }} -Dpapermc.groupId=${{ steps.manage-matrix.outputs.groupId }} -Dpapermc.version=${{ steps.manage-matrix.outputs.version }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.manage-matrix.outputs.version }}
          path: |
            target/*.jar

  finished:
    runs-on: ubuntu-latest
    needs: [setup, get-versions, build]
    
    steps:
      - name: Finished
        run: echo finished

name: Release

on:
  workflow_dispatch:
  pull_request_target:
    branches:
      - master
    types:
      - closed

jobs:
  get-versions:
    runs-on: ubuntu-latest

    outputs:
      versions: ${{ steps.versions.outputs.value }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install requests beautifulsoup4 semver

      - name: Get versions
        id: versions
        run: |
          VERSIONS=`python tools/get-versions.py`
          echo $VERSIONS
          echo "value=${VERSIONS}" >> $GITHUB_OUTPUT

  create-release:
    runs-on: ubuntu-latest
    needs: [get-versions]

    outputs:
      version: ${{ steps.tag_version.outputs.new_version }}
      release-upload-url: ${{ steps.create_release.outputs.upload_url }}
      release-html-url: ${{ steps.create_release.outputs.html_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: "minor"
          custom_release_rules: "feat:minor:✨ Features,fix:patch:🐛 Fixes,docs:patch:📰 Docs,chore:patch:🎨 Chore,pref:patch:🎈 Performance improvements,refactor:patch:🧹 Refactoring,build:patch:🔍 Build,ci:patch:🔍 CI,revert:patch:⏪ Revert,style:patch:🧹 Style,test:patch:👀 Test,release:major:📦 Release"

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.16.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          draft: false
          prerelease: false

  build:
    name: Build (${{ fromJson(matrix.versions).version }})
    runs-on: ubuntu-latest
    needs: [get-versions, create-release]

    strategy:
      fail-fast: false
      matrix:
        versions: ${{ fromJson(needs.get-versions.outputs.versions) }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Manage matrix
        id: manage-matrix
        run: |
          echo "groupId=${{ fromJson(matrix.versions).groupId }}" | tee -a $GITHUB_OUTPUT
          echo "javadoc_version=${{ fromJson(matrix.versions).javadoc_version }}" | tee -a $GITHUB_OUTPUT
          echo "version=${{ fromJson(matrix.versions).version }}" | tee -a $GITHUB_OUTPUT
          echo "java_version=${{ fromJson(matrix.versions).java_version }}" | tee -a $GITHUB_OUTPUT

      - name: Setup Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install requests beautifulsoup4 semver

      - name: Set up JDK ${{ steps.manage-matrix.outputs.java_version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ steps.manage-matrix.outputs.java_version }}
          distribution: adopt

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache event files
        uses: actions/cache@v4
        id: cache-event-files
        with:
          path: src/main/java/com/tomacheese/eventfinder/listeners
          key: ${{ runner.os }}-eventfiles-${{ steps.manage-matrix.outputs.version }}

      - name: Create event files
        run: python tools/get-events.py ${{ steps.manage-matrix.outputs.javadoc_version }}

      - name: Build with Maven
        run: mvn package -Dversion=${{ needs.create-release.outputs.version }} -Djava.version=${{ steps.manage-matrix.outputs.java_version }} -Dpapermc.groupId=${{ steps.manage-matrix.outputs.groupId }} -Dpapermc.version=${{ steps.manage-matrix.outputs.version }}

      - name: Upload Release Asset
        uses: shogo82148/actions-upload-release-asset@v1.8.0
        with:
          upload_url: ${{ needs.create-release.outputs.release-upload-url }}
          asset_path: target/*-${{ steps.manage-matrix.outputs.version }}.jar
